/*5. MazeSolver

5a constructors:
MazeSolver(String filename) : filename - input name of the maze file.
MazeSolver(String filename, boolean animate) : filename - input name of the maze file, animate - true for animating your maze.

5b public methods:
solve() - call solve(1)
solve(int style) - style is 0-4, where 0-DFS, 1-BFS,2-BestFirst, 3-A*
This method will instantiate the Frontier based on which style was chosen. 
It will then add the starting location of the maze to the Frontier.
Finally it will process each subsequent element of the frontier until the end is found. 


toString() - the toString of the maze instanceVariable.

addToFrontier - change the maze to a '?'
*/

public class MazeSolver{

public MazeSolver(String filename) throws IOException{

}

public MazeSolver(String filename, boolean animate) throws IOException{

}

public char[][] Helper(){
int num = 0;
maze = new char[width][height];
while((readline = read.readLine()) != null){
char[] ch = readline.toCharArray();
for(int i = 0;i < ch.length;i++){
maze[i][num] = ch[i];
if (maze[i][num] = 'E'){
ey = num;
ex = i;
}
if (maze[i][num] = 'S'){
sy = num;
sx = i;
}
}
num++;
}
}


}
